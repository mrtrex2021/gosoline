
# This is a sample api mustache template.  It is representing a ficticous 
# language and won't be usable or compile to anything without lots of changes.
# Use it as an example.  You can access the variables in the generator object
# like such:

# use the package from the `apiPackage` variable
package: {{package}}

# operations block
{{#operations}}
classname: {{classname}}

# loop over each operation in the API:
{{#operation}}

# each operation has an `operationId`:
operationId: {{operationId}}

# and parameters:
{{#allParams}}
{{paramName}}: {{dataType}}
{{/allParams}}

{{/operation}}

# end of operations block
{{/operations}}

package api

import (
"context"
"fmt"

"github.com/justtrackio/gosoline/pkg/apiserver"
"github.com/justtrackio/gosoline/pkg/apiserver/auth"
"github.com/justtrackio/gosoline/pkg/apiserver/crud"
"github.com/justtrackio/gosoline/pkg/cfg"
"github.com/justtrackio/gosoline/pkg/log"
)

func DefineRouter(ctx context.Context, config cfg.Config, logger log.Logger) (*apiserver.Definitions, error) {
d := &apiserver.Definitions{}
d.Use(apiserver.Cors(config))

jwtAuth := auth.NewJWTAuthAuthenticator(config)
authenticate := auth.NewChainHandler(map[string]auth.Authenticator{
auth.ByApiKey: auth.NewUncheckedKeyAuthenticator(config, logger),
auth.ByJWT:    jwtAuth,
})
d.Use(authenticate)



